[2022-09-08 03:02:28,865] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-08 03:02:29,032] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-09-08 03:02:29,063] INFO [Controller id=2] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-09-08 03:02:29,215] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2022-09-08 03:02:29,267] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-09-08 03:02:29,317] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-09-08 03:02:29,352] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2022-09-08 03:02:29,407] INFO [Controller id=2] Initialized broker epochs cache: HashMap(0 -> 4294967358, 1 -> 4294967357, 2 -> 4294967356) (kafka.controller.KafkaController)
[2022-09-08 03:02:29,412] DEBUG [Controller id=2] Register BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2022-09-08 03:02:29,462] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-09-08 03:02:29,466] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-09-08 03:02:29,551] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-09-08 03:02:29,571] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-09-08 03:02:29,571] INFO [Controller id=2] Currently active brokers in the cluster: Set(0, 1, 2) (kafka.controller.KafkaController)
[2022-09-08 03:02:29,571] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-09-08 03:02:29,571] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-09-08 03:02:29,571] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2022-09-08 03:02:29,572] INFO [Controller id=2] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-09-08 03:02:29,572] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-09-08 03:02:29,576] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-09-08 03:02:29,577] INFO [Controller id=2] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-09-08 03:02:29,577] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-09-08 03:02:29,577] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-09-08 03:02:29,578] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2022-09-08 03:02:29,594] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-09-08 03:02:29,595] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-08 03:02:29,616] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.5.0.3:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-08 03:02:29,617] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.5.0.2:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-08 03:02:29,617] INFO [RequestSendThread controllerId=2] Controller 2 connected to 10.5.0.4:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-09-08 03:02:29,623] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-09-08 03:02:29,623] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-09-08 03:02:29,624] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-09-08 03:02:29,624] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-09-08 03:02:29,646] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-09-08 03:02:29,649] INFO [Controller id=2] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-09-08 03:02:29,710] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-09-08 03:02:29,711] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-09-08 03:02:29,711] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-09-08 03:02:29,711] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-09-08 03:02:29,713] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-09-08 03:02:29,768] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-09-08 03:02:34,770] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-09-08 03:02:34,773] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-09-08 03:02:35,468] INFO [Controller id=2] New topics: [Set(TEST)], deleted topics: [HashSet()], new partition replica assignment [Map(TEST-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), TEST-1 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2022-09-08 03:02:35,470] INFO [Controller id=2] New partition creation callback for TEST-0,TEST-1 (kafka.controller.KafkaController)
[2022-09-08 03:02:37,431] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-09-08 03:02:37,431] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-09-08 03:02:37,432] DEBUG [Controller id=2] Live brokers: 0,1 (kafka.controller.KafkaController)
[2022-09-08 03:02:37,654] TRACE [Controller id=2] All leaders = TEST-0 -> (Leader:0,ISR:0,1,LeaderEpoch:1,ControllerEpoch:1),TEST-1 -> (Leader:1,ISR:1,0,LeaderEpoch:1,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-09-08 03:02:38,074] INFO [Controller id=2] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2022-09-08 03:02:38,074] INFO [Controller id=2] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-09-08 03:02:38,758] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker 10.5.0.2:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.5.0.2:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:38,886] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker 10.5.0.2:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.5.0.2:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:38,988] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker 10.5.0.2:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.5.0.2:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,090] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker 10.5.0.2:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.5.0.2:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,173] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-08 03:02:39,183] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-08 03:02:39,183] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-08 03:02:39,191] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker 10.5.0.2:9092 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 10.5.0.2:9092 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:246)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,190] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2022-09-08 03:02:39,196] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2022-09-08 03:02:39,210] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-09-08 03:02:39,216] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-09-08 03:02:39,219] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,221] WARN [RequestSendThread controllerId=2] Controller 2 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=2, controllerEpoch=1, brokerEpoch=4294967358, partitionStates=[LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true)], liveLeaders=(10.5.0.4:9092 (id: 0 rack: null), 10.5.0.3:9092 (id: 1 rack: null))) to broker 10.5.0.4:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Client was shutdown before response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:109)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:253)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,222] ERROR [RequestSendThread controllerId=2] Controller 2 fails to send a request to broker 10.5.0.4:9092 (id: 0 rack: null) (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:234)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,222] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,230] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,245] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,249] WARN [RequestSendThread controllerId=2] Controller 2 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=2, controllerEpoch=1, brokerEpoch=4294967357, partitionStates=[LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], addingReplicas=[], removingReplicas=[], isNew=true), LeaderAndIsrPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], addingReplicas=[], removingReplicas=[], isNew=true)], liveLeaders=(10.5.0.4:9092 (id: 0 rack: null), 10.5.0.3:9092 (id: 1 rack: null))) to broker 10.5.0.3:9092 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Client was shutdown before response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:109)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:253)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,255] ERROR [RequestSendThread controllerId=2] Controller 2 fails to send a request to broker 10.5.0.3:9092 (id: 1 rack: null) (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:234)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,255] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,255] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,271] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,272] WARN [RequestSendThread controllerId=2] Controller 2 epoch 1 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=1, brokerEpoch=4294967356, partitionStates=[UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=13, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=46, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=9, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=42, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=21, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=17, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=30, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=26, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=5, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=38, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=1, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=34, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=16, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=45, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=12, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=41, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=24, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=20, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=49, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=0, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=29, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=25, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=8, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=37, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=4, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=33, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=15, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=48, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=11, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=44, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=23, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=19, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=32, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=28, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=7, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=40, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=3, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=36, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=47, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=14, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=43, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=10, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=22, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 1, 2], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=18, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=31, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[0, 2, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=27, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=39, controllerEpoch=1, leader=0, leaderEpoch=0, isr=[0, 1], zkVersion=0, replicas=[2, 0, 1], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=6, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[2, 1, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=35, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 2, 0], offlineReplicas=[2]), UpdateMetadataPartitionState(topicName='__consumer_offsets', partitionIndex=2, controllerEpoch=1, leader=1, leaderEpoch=0, isr=[1, 0], zkVersion=0, replicas=[1, 0, 2], offlineReplicas=[2])], liveBrokers=UpdateMetadataBroker(id=0, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='10.5.0.4', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='10.5.0.3', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9092, host='10.5.0.2', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker 10.5.0.2:9092 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:277)
	at kafka.utils.ShutdownableThread.pause(ShutdownableThread.scala:82)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:234)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2022-09-08 03:02:39,273] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,273] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,274] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2022-09-08 03:02:39,280] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2022-09-08 03:02:50,110] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-09-08 03:02:50,122] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2022-09-08 03:02:59,888] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
